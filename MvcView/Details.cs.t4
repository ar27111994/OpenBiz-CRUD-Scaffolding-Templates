<#@ template language="C#" HostSpecific="True" #>
<#@ output extension=".cshtml" #>
<#@ include file="Imports.include.t4" #>
@model <#= ViewDataTypeName #>
<#
// The following chained if-statement outputs the file header code and markup for a partial view, a view using a layout page, or a regular view.
if(IsPartialView) {
#>

<#
} else if(IsLayoutPageSelected) {
#>

@{
	ViewBag.Title = "<#= ViewName#>";
}

<h2><#= ViewName#></h2>

<#
} else {
#>

@{
	Layout = null;
}

<!DOCTYPE html>

<html>
<head>
	<meta name="viewport" content="width=device-width" />
	<title><#= ViewName #></title>
</head>
<body>
<#
	PushIndent("    ");
}
#>
<div class="modal-header">
	<button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
	<h4 class="modal-title"><#= ViewDataTypeShortName #></h4>
</div>
	<hr />
	<div class="modal-body">
	<div class="form-horizontal">
<#
foreach (PropertyMetadata property in ModelMetadata.Properties) {
	if (property.Scaffold && !property.IsPrimaryKey && !property.IsForeignKey) {
#>
<#
		// We do not want to show any association properties for which there is
		// no associated foreign key.
		if (property.IsAssociation && GetRelatedModelMetadata(property) == null) {
			continue;
		}
#>
		<div class="form-group">
			@Html.LabelFor(model => model.<#= GetValueExpression(property) #>, new { @class = "control-label col-sm-3" })

		<div class="col-sm-9">
			@Html.TextBoxFor(model => model.<#= GetValueExpression(property) #>, new { @class = "form-control required", @disabled = "disabled"})
		</div>
		
		</div>
<#
	}
}
#>

</div>
</div>

<div class="modal-footer">
	<button class="btn btn-warning" data-dismiss="modal">Close</button>
</div>

<#
// The following code closes the tag used in the case of a view using a layout page and the body and html tags in the case of a regular view page
#>
<#
if(!IsPartialView && !IsLayoutPageSelected) {
	ClearIndent();
#>
</body>
</html>
<#
}
#>
<#@ include file="ModelMetadataFunctions.cs.include.t4" #>